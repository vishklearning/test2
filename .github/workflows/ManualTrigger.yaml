name: Manual Trigger Workflow

on:
  workflow_dispatch:
    inputs:
      sourcebranch:
        description: 'Source Branch Name'
        type: string
        required: true
      sourcemainbranch:
        description: 'Source Main Branch Name'
        type: string
        required: true
      tragetbranch:
        description: 'Target Branch Name'
        type: string
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
   # environment: develop
    env:
      TARGET_ENVIRONMENT: ${{inputs.tragetbranch}}
      SOURCE_REPO: ${{inputs.sourcebranch}}
      SOURCE_MAIN_REPO: ${{inputs.sourcemainbranch}}
   # if: env.TARGET_ENVIRONMENT == 'develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install SFDX-CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx && ls -la
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          echo The PATH is $GITHUB_PATH
          ~/sfdx/bin/sfdx version
        
      # install SFDX Scanner
#       - name: Install SFDX-Scanner
#         run:  sfdx plugins:install @salesforce/sfdx-scanner
      
      - uses: actions/checkout@v3
        name: Checkout Python_Scripts
        with:
          repository: bayer-int/chcp-iqvia-oce-personal-github-actions
          token: ${{ secrets.V_METADATA_SEC }}
          path: ./acct-scripts
        
      # Checkout the first repository
      - name: Checkout Repository 1
        uses: actions/checkout@v2
        with:
          repository: bayer-int/chcp-iqvia-oce-personal-middleeast
          path: ./test2-1
          ref: main
      # ${{ env.SOURCE_REPO }}
      
      - name: Checkout Repository 2
        uses: actions/checkout@v2
        with:
          repository: bayer-int/chcp-iqvia-oce-personal-middleeast
          path: ./test2
          ref: feature/bayer-devops
      # ${{ env.TARGET_REPO }}
      
       # Authenticate SFDX Instance
      - name: Authenticate SFDX Instance
        id: sfdxAuthenticate
        run: |
          echo "Logging as ${{ secrets.SFDXUSERNAME }}"

          echo "${{ secrets.SERVERKEY_SECUREFILEPATH}}" > server.key
          authResponse=$(sfdx auth:jwt:grant --clientid "${{secrets.SFDXCONSUMERKEY}}" --jwtkeyfile=server.key --username "${{secrets.SFDXUSERNAME}}" --instanceurl "${{secrets.SFDX_INSTANCE_URL}}" --json)
          statusCode=$(jq -r '.status' <<< $authResponse)

          # echo $authResponse
          echo $statusCode

          if [[ "$statusCode" != "0" ]]; then
            authenticationMessage=$(jq -r '.message' $authResponse)
            echo "Error found: $authenticationMessage"
            echo "$authenticationMessage"
            exit 1
          fi
      # Generate Describe Log
      - name: Generate Describe Log
        id: describe
        run: |
          describelog=$(cat ./describe.log)
          echo "Vloicty Difference between source and target is:"
          echo "$describelog"        
      # sf org list metadata-types -o vishksalesforce@gmail.com.dev1 --output-file describe.log --api-version 57.0          
    
      # Upload the output to ./describe.log
      - uses: actions/upload-artifact@v3
        name: Artfifact Upload - ./describe.log
        with:
          name: describe.log
          path: ./describe.log
          retention-days: 1
        
     # Run the MergeDX
      - name: MergerDX
        id: MergerDX
        continue-on-error: true
        run: |
          python3 ./acct-scripts/mergerDX/merger.py merge_delta -s ${{env.TARGET_REPO}} -t ${{env.SOURCE_REPO}} -a ${{secrets.API_VERSION}}
          if [ $? -eq 0 ] && [ $(ls srcToDeploy | wc -l) -ne 0 ]; then
            echo "Success in MergeDX"
            zip -r srcToDeploy.zip ./srcToDeploy/
            git rev-parse --verify HEAD
          else 
            echo "::warning:: Failure in MergeDX: The srcToDeploy.zip is EMPTY(i.e. No New Code Changes Detected)"
            exit 1
          fi
#       # Create Directory
#       - name: Create Directory
#         run: |
#           mkdir destforceapp
          
#       - name: Merge Repository 1
#         run: |
#           cp -r ./force-app1/*  ./force-app2/* ./destforceapp
#           ls destforceapp
#           ls force-app1
#           ls force-app2
     
      # Deploy the merged metadata to Salesforce
      - name: Deploy to Salesforce
        run: |
          sfdx force:source:deploy -p force-app -u huborg
